name: Build

on:
  push:
    branches: [ master ]

jobs:
  bump:
    runs-on: ubuntu-latest
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Increase version
        run: |
          # Determine bump type
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          BUMP_TYPE="patch"
          if [[ $COMMIT_MESSAGE == *"#major"* ]]; then
            BUMP_TYPE="major"
          elif [[ $COMMIT_MESSAGE == *"#minor"* ]]; then
            BUMP_TYPE="minor"
          fi
          
          # Extract and increment version parts
          POMPATH=my-app
          OLD_VERSION=$(cd $POMPATH && mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          old="$OLD_VERSION"
          parts=( ${old//./ } )
          if [ "$BUMP_TYPE" == "major" ]; then
            bv=0
            parts[1]=0
            parts[2]=0
          elif [ "$BUMP_TYPE" == "minor" ]; then
            bv=0
            parts[2]=0
          else
            bv=$((parts[2] + 1))
          fi
          NEW_VERSION="${parts[0]}.${parts[1]}.${bv}"
          
          # Set new version
          echo "pom.xml at $POMPATH will be bumped from $OLD_VERSION to $NEW_VERSION"
          mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file $POMPATH/pom.xml
          echo ::set-output name=jar_version::${NEW_VERSION}
          
  build:
    runs-on: ubuntu-latest
    needs: bump
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v2
    
    - name: Change working directory
      run: cd ./my-app/src
      
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Compile
      run: mvn -B compile --file my-app/pom.xml
      
    - name: Build with Maven
      run: mvn -B package --file my-app/pom.xml
      
    - name: Temporarily save jar artifact
      uses: actions/upload-artifact@v2
      with:
        name: jar-artifact
        path: ${{ github.workspace }}/my-app/target/*.jar
        retention-days: 1
        
  deploy:
    runs-on: ubuntu-18.04
    needs: bump

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
          name: jar-artifact
          path: target/
    - name: Docker build
      run: |
        docker build . -t chernymike/cherny-maven:${{needs.bump.outputs.jar_version}}
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker push
      run: |
        docker push chernymike/cherny-maven:${{needs.bump.outputs.jar_version}}
        
  run:
    runs-on: ubuntu-18.04
    needs: bump

    steps:
    - name: Run container
      run: |
        docker run chernymike/cherny-maven:${{needs.bump.outputs.jar_version}}
