name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Change working directory
      run: cd ./my-app/src
      
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
        
    - name: Increase patch version
      run: |
        POMPATH=my-app
        OLD_VERSION=$(cd $POMPATH && mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        BUMP_MODE="none"
        old="$OLD_VERSION"
        parts=( ${old//./ } )
        bv=$((parts[2] + 1))
        NEW_VERSION="${parts[0]}.${parts[1]}.${bv}"
        echo "pom.xml at" $POMPATH "will be bumped from" $OLD_VERSION "to" $NEW_VERSION
        mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file $POMPATH/pom.xml
        echo ::set-output name=jar_version::${NEW_VERSION}
        
    - name: Compile
      run: mvn -B compile --file my-app/pom.xml
      
    - name: Build with Maven
      run: mvn -B package --file my-app/pom.xml
      
    - name: Create artifact
      uses: actions/create-artifact@v2
      with:
        name: jar-artifact
        path: ${{ github.workspace }}/my-app/target/*.jar
        
    - name: Docker build
      run: |
        docker build . -t chernymike/cherny-maven:${{steps.bump.outputs.jar_version}}
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker push
      run: |
        docker push chernymike/cherny-maven:${{steps.bump.outputs.jar_version}}
        
    - name: Download and run Docker
      run: |
        docker run -p 8080:8080 my-repository:${{ github.event.head_commit.id }}
